{"version":3,"sources":["components/animation.js","utils/interact.js","components/mint.js","components/faq.js","App.js","reportWebVitals.js","index.js"],"names":["Animation","className","id","controls","autoPlay","muted","src","type","connectWallet","a","window","ethereum","request","method","addressArray","obj","address","alert","message","getCurrentWalletConnected","length","contractABI","require","contract","createAlchemyWeb3","process","eth","Contract","mintNFT","amount","price","success","status","methods","mint","send","from","gasPrice","gas","value","on","error","receipt","console","log","Mint","useState","walletAddress","setWallet","show","setShow","tokenNumber","setTokenNumber","setStatus","supply","setSupply","handleClose","handleShow","onMintPressed","addWalletListener","accounts","useEffect","totalSupply","call","then","_supply","catch","err","fetchData","connectWalletPressed","walletResponse","alt","width","height","Button","onClick","String","substring","Modal","onHide","Header","closeButton","Title","Body","style","maxWidth","aria-hidden","Form","Label","Footer","variant","FAQ","Accordion","Item","eventKey","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f49abd1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Animation = () => {\n  return (\n    <div>\n      <div className=\"animation-header purple-text text-center\" id=\"animation\">\n        Welcome\n      </div>\n      <div className=\"gif-container\">\n        <gif className=\"gif-board\" controls autoPlay=\"autoplay\" muted>\n          <source src=\"./video/example.gif\" type=\"image/gif\"/>    \n        </gif>\n        <gif className=\"gif-board\" controls autoPlay=\"autoplay\" muted>\n          <source src=\"./video/Donkey video 2 FINAL.gif\" type=\"image/gif\"/>    \n        </gif>\n      </div>\n      \n    </div>\n  );  \n};\n\nexport default Animation;","export const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const obj = {          \n          address: addressArray[0],\n        };\n        return obj;\n      } catch (err) {\n        alert(err.message);\n        return {        \n          address: \"\",                \n        };\n      }\n    } else {\n      alert(\"Metamask is not installed!\");\n      return {\n        address: \"\",        \n      };\n    }\n  };\n  \n  export const getCurrentWalletConnected = async () => {\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (addressArray.length > 0) {\n          return {\n            address: addressArray[0],            \n          };\n        } else {\n          return {\n            address: \"\",            \n          };\n        }\n      } catch (err) {\n        return {\n          address: \"\",          \n        };\n      }\n    } else {\n      return {\n        address: \"\",        \n      };\n    }\n  };\n  \n  ","import React, { useState, useEffect } from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport { connectWallet, getCurrentWalletConnected } from \"../utils/interact.js\";\n\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst contractABI = require(\"../contract-abi.json\");\nconst contractAddress = \"0x7340E290f9bE98E879200E53DA75469Eb2F5CA42\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst contract = new web3.eth.Contract(contractABI, contractAddress);  \n\nconst mintNFT = async(amount, price) => {  \n  const {address} = await getCurrentWalletConnected();\n  if (address === \"\") {\n    return {\n      success: false, \n      status: \"❗Please make sure wallet connected.\",           \n    }\n  }  \n  else {      \n    contract.methods.mint(amount).send({from: address, gasPrice: 80000000000, gas: 380000*amount, value: (amount * price)})\n    .on(\"confirmation\", function () {      \n    })\n    .on('error', async function (error, receipt) {\n      console.log(error);      \n    }); \n\n    return {\n      status: \"\",\n    }   \n    \n  }\n}    \n\nconst Mint = () => {\n  const [walletAddress, setWallet] = useState(\"\");  \n  const [show, setShow] = useState(false);\n  const [tokenNumber, setTokenNumber] = useState(1);\n  const [status, setStatus] = useState(\"\"); \n  const publicsale = true;\n  const [supply, setSupply] = useState(0);\n\n  const handleClose = () => setShow(false);  \n  const publicsale_price = 80000000000000000;\n\n  const handleShow = async () => {  \n    setShow(true);   \n  };\n\n  const onMintHandle = () => {       \n    setStatus(\"Mint not allowed!\");\n  };\n\n  const decreaseTokenNumber = () => {\n    if (tokenNumber === 1) {\n      return;\n    }\n    setTokenNumber(tokenNumber - 1);\n  }\n\n  const onMintPressed = async () => {          \n    const { status } = await mintNFT(tokenNumber, publicsale_price); \n      setStatus(status);         \n  };\n\n  useEffect(() => {    \n    async function fetchData() {\n      const {address} = await getCurrentWalletConnected();      \n      contract.methods.totalSupply().call().then((_supply) => {        \n        setSupply(_supply);\n      }).catch((err) => console.log(err))\n      setWallet(address);    \n      addWalletListener(); \n    }\n    fetchData();\n  }, []);\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);          \n        } else {\n          setWallet(\"\");          \n        }\n      });\n    } else {\n         \n    }\n  } \n\n  const connectWalletPressed = async () => {\n    const walletResponse = await connectWallet();    \n    setWallet(walletResponse.address);\n  };\n\n  return (\n    <div className=\"mint-container purple-text\">\n      <div className=\"mint-header text-center\" id=\"mint\">\n        Mint\n      </div>\n      <div className=\"mint-panel\">\n        <div className=\"mint-header text-center\">\n          Shadow Descendants\n        </div>\n        <div className=\"mint-narration\">\n          Get you own crazy, funky, alien, amazing Vampires here. \n          They are here to make people panic after the pandemic and have a fun time within the community. \n          Our main goal is to find each of these Shadow Descendants a owner where they will battle it out between who is the most valueable out of all of them.\n        </div>\n        <div className=\"collage\">\n          <img src=\"./images/example.gif\" alt=\"\" width=\"150\" height=\"150\"/>\n        </div>\n        <div className=\"mint-price\">\n          Max per Tx 15<br />\n          Only 0.08 Eth Each\n        </div>\n        <div className=\"text-center\">\n          <Button className=\"connect-btn mt-3\" onClick={connectWalletPressed}>\n            {walletAddress.length > 0 ? (                    \n              \"\" +\n              String(walletAddress).substring(0, 6) +\n              \"...\" +\n              String(walletAddress).substring(38)\n              ) : (\n                <span>Connect</span>\n              )\n            } \n          </Button>\n        </div>\n        <div className=\"mint-status text-center\">\n          {supply} / 10000 Sold Out \n        </div>\n        <div className=\"text-center\">\n          <Button className=\"mint-btn mb-3 mb-md-5\" onClick={handleShow}>\n            Mint\n          </Button>\n        </div>\n      </div>  \n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Mint some Shadow Descendants</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <img src=\"./images/example.gif\" alt=\"\" style={{maxWidth: \"220px\"}}/>\n          <div className=\"mint-number\">\n            <button type=\"button\" onClick={decreaseTokenNumber}><span aria-hidden=\"true\">-</span></button>\n            <Form>\n              <Form.Label>\n                { tokenNumber }\n              </Form.Label>                  \n              {status ? <div>{status}</div> \n                : <div></div>}\n            </Form>                \n            {(tokenNumber < 20) ? <button type=\"button\" onClick={() => setTokenNumber(tokenNumber + 1)}><span aria-hidden=\"true\">+</span></button> \n              : <button type=\"button\" onClick={() => setTokenNumber(tokenNumber)}><span aria-hidden=\"true\">+</span></button>\n            }\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          {(!publicsale) ? <Button variant=\"primary\" onClick={onMintHandle}>Mint</Button> \n            : <Button variant=\"primary\" onClick={onMintPressed}>Mint</Button>\n          }              \n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>               \n    </div>\n  );  \n};\n\nexport default Mint;","import React from \"react\";\nimport {Accordion} from \"react-bootstrap\";\n\nconst FAQ = () => {\n  return (\n    <div className=\"faq-container purple-text\">\n      <div className=\"faq-header text-center\" id=\"faq\">\n        FAQ\n      </div>\n      <div className=\"faq-text px-2 px-md-4\">\n      </div>\n      <Accordion>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>Q:What are Shadow Descentdants ?</Accordion.Header>\n          <Accordion.Body>\n            A:Shadow Descentdants are Non-Fungible Tokens (NFTs), unique digital assets that can take the form of artwork and provide utility to holders.\n            Shadow Descendants stand apart with a focus on making people put a smile on their faces.\n            This allows the team and entire community to help those in need and create more products for our community.\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>Q:How can I purchase a Shadow Descentdants?</Accordion.Header>\n          <Accordion.Body>\n            A:Click the mint tab at the top of the website. Then connect your wallet and click mint on the amount you want to mint.\n            The minting dialog allows you to mint up to 15 Shadow Descentdants at a time.\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default FAQ;","import { Fragment } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import Navigation from './components/nabvar';\n//import Banner from './components/banner';\nimport Animation from './components/animation';\nimport Mint from './components/mint';\n//import Roadmap from './components/roadmap';\nimport FAQ from './components/faq';\n//import Gallery from './components/gallery';\n\nimport './styles/navbar.css';\nimport './styles/main.css';\nimport './styles/fontawesome.min.css'\n\nfunction App() {\n  return (\n    <Fragment>\n       <Animation />\n    \n    \n      <Mint />\n   \n      <FAQ />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}